# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-25 07:45
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('pro', 'pro'), ('semipro', 'semipro')], default='pro', max_length=14)),
                ('travel_cost', models.IntegerField(blank=True, null=True)),
                ('hotel_cost', models.IntegerField(blank=True, null=True)),
                ('other_cost', models.IntegerField(blank=True, null=True)),
                ('comment_WG', models.CharField(blank=True, max_length=500)),
                ('comment_model', models.CharField(blank=True, max_length=500)),
                ('statut', models.CharField(choices=[('created', 'created'), ('waiting answer', 'waiting answer'), ('confirmed', 'confirmed'), ('not possible', 'not possible'), ('realized', 'realized'), ('acquitted', 'acquitted')], default='created', max_length=14)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('total_price', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.CharField(max_length=8)),
                ('file', models.FileField(upload_to='')),
                ('send_date', models.DateField()),
                ('answer_date', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('waiting answer', 'waiting answer'), ('accepted', 'accepted'), ('rejected', 'rejected')], default='waiting answer', max_length=14)),
                ('comment_WG', models.CharField(blank=True, max_length=500)),
                ('comment_client', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_short', models.CharField(blank=True, max_length=100)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('company_short', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=15)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('comment', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=500)),
                ('date', models.DateField()),
                ('amount', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('statut', models.CharField(choices=[('planned', 'planned'), ('complete', 'complete')], default='planned', max_length=14)),
            ],
        ),
        migrations.CreateModel(
            name='Horaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('finish_time', models.TimeField()),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apli.Assignment')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_short', models.CharField(blank=True, max_length=100)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('company_short', models.CharField(blank=True, max_length=100)),
                ('agent', models.CharField(blank=True, max_length=200)),
                ('agent_short', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=15)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('comment', models.CharField(blank=True, max_length=500)),
                ('sedcard', models.BooleanField(default=False)),
                ('statut', models.CharField(choices=[('mod', 'Modelo'), ('fot', 'Fotografo'), ('mak', 'Make Up'), ('sty', 'Styling'), ('rhh', 'Recursos Humanos'), ('otr', 'Otro')], default='mod', max_length=3)),
                ('bank_account', models.CharField(max_length=27, validators=[django.core.validators.RegexValidator(message="Bank account must be entered in the format: 'DE12 3456 7890 1234 5678 90'. Up to 27 digits allowed.", regex='^DE\\d{2}\\s?([0-9a-zA-Z]{4}\\s?){4}[0-9a-zA-Z]{2}$')])),
                ('website', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start', models.DateField()),
                ('finish', models.DateField()),
                ('comment', models.CharField(blank=True, max_length=500)),
                ('sort', models.CharField(choices=[('angebot', 'angebot'), ('aufttrag', 'aufttrag'), ('job', 'job')], default='angebot', max_length=8)),
                ('all_day', models.IntegerField(blank=True, null=True)),
                ('half_day', models.IntegerField(blank=True, null=True)),
                ('half_day_price_pro', models.IntegerField(blank=True, null=True)),
                ('all_day_price_pro', models.IntegerField(blank=True, null=True)),
                ('over_price_pro', models.IntegerField(blank=True, null=True)),
                ('all_in_price_pro', models.IntegerField(blank=True, null=True)),
                ('half_day_price_semipro', models.IntegerField(blank=True, null=True)),
                ('all_day_price_semipro', models.IntegerField(blank=True, null=True)),
                ('over_price_semipro', models.IntegerField(blank=True, null=True)),
                ('all_in_price_semipro', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.CharField(blank=True, max_length=15)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('comment_address', models.CharField(blank=True, max_length=500)),
                ('honorary_base', models.IntegerField(blank=True, null=True)),
                ('honorary_plus', models.IntegerField(blank=True, null=True)),
                ('quantity_models_honorary_plus', models.IntegerField(blank=True, null=True)),
                ('ms_price', models.IntegerField(blank=True, null=True)),
                ('ms_hours', models.IntegerField(blank=True, null=True)),
                ('requirement_price', models.IntegerField(blank=True, null=True)),
                ('requirement_hours', models.IntegerField(blank=True, null=True)),
                ('requisiten_price_for_each_model', models.IntegerField(blank=True, null=True)),
                ('other_title', models.CharField(blank=True, max_length=50)),
                ('other_description', models.CharField(blank=True, max_length=200)),
                ('other_price', models.IntegerField(blank=True, null=True)),
                ('other_hours', models.IntegerField(blank=True, null=True)),
                ('photo_price', models.IntegerField(blank=True, null=True)),
                ('photo_hours', models.IntegerField(blank=True, null=True)),
                ('tax', models.IntegerField(default=19)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apli.Client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cost',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apli.Project'),
        ),
        migrations.AddField(
            model_name='cost',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attachment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apli.Project'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apli.Person'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apli.Project'),
        ),
    ]
